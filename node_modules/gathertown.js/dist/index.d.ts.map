{"mappings":"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","sources":["src/src/types.ts","src/src/api/validateStatus.ts","src/src/api/createSpace.ts","src/src/api/getEmailGuestList.ts","src/src/api/getMap.ts","src/src/api/setEmailGuestlist.ts","src/src/api/setMap.ts","src/src/index.ts","src/index.ts"],"sourcesContent":[null,null,null,null,null,null,null,null,"import type { IGuest } from './types';\nimport { CreateSpaceProps, handleCreateSpace } from './api/createSpace';\nimport { GetEmailGuestlistProps, handleGetEmailGuestlist } from './api/getEmailGuestList';\nimport { GetMapProps, handleGetMap } from './api/getMap';\nimport { handleSetEmailGuestlist, SetEmailGuestlistProps } from './api/setEmailGuestlist';\nimport { SetMapProps, handleSetMap } from './api/setMap';\n\ninterface IGather {\n  createSpace(props: Omit<CreateSpaceProps, 'apiKey'>): Promise<string>;\n  getEmailGuestlist(props: Omit<GetEmailGuestlistProps, 'apiKey'>): Promise<IGuest>;\n  getMap(props: Omit<GetMapProps, 'apiKey'>): Promise<any>;\n  setMap(props: Omit<SetMapProps, 'apiKey'>): Promise<any>;\n  setEmailGuestlist(props: Omit<SetEmailGuestlistProps, 'apiKey'>): Promise<IGuest>;\n}\n\nfunction Gather(initialApiKey: string): IGather {\n  const createSpace: IGather['createSpace'] = async ({ name, map, reason, sourceSpace }) => {\n    const res = await handleCreateSpace({\n      apiKey: initialApiKey,\n      map,\n      name,\n      reason,\n      sourceSpace,\n    });\n\n    return res.data;\n  };\n\n  const getEmailGuestlist: IGather['getEmailGuestlist'] = async ({ spaceId }) => {\n    const res = await handleGetEmailGuestlist({\n      apiKey: initialApiKey,\n      spaceId,\n    });\n\n    return res.data;\n  };\n\n  const getMap: IGather['getMap'] = async ({ mapId, spaceId }) => {\n    const res = await handleGetMap({\n      apiKey: initialApiKey,\n      mapId,\n      spaceId,\n    });\n\n    return res.data;\n  };\n\n  const setMap: IGather['setMap'] = async ({ mapId, spaceId, mapContent }) => {\n    const res = await handleSetMap({\n      apiKey: initialApiKey,\n      mapContent,\n      mapId,\n      spaceId,\n    });\n\n    return res.data;\n  };\n\n  const setEmailGuestlist: IGather['setEmailGuestlist'] = async ({\n    spaceId,\n    guestlist,\n    overwrite,\n  }) => {\n    const res = await handleSetEmailGuestlist({\n      apiKey: initialApiKey,\n      spaceId,\n      guestlist,\n      overwrite,\n    });\n\n    return res.data;\n  };\n\n  return {\n    createSpace,\n    getEmailGuestlist,\n    getMap,\n    setMap,\n    setEmailGuestlist,\n  };\n}\n\nexport const useGather = (apiKey: string) => {\n  return Gather(apiKey);\n};\n\nexport default Gather;\n"],"names":[],"version":3,"file":"index.d.ts.map"}